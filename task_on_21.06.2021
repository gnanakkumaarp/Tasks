 // addFive
var num = 10;
function addFive(num) {
    var result = num + 5;
    return result; 
    // console.log(result); 
}
console.log(addFive(13));
// getOpposites

// var num = 5.0;
// console.log(Number.isInteger(num));
function getOpposite(val) {
    if (((typeof val) === 'string') || (Number.isInteger(val) === false)) {
        console.log(-1);
    } else if ((typeof val) === 'number') {
        console.log(val * -1);
    }
}
getOpposite(5.0);



// toSeconds
var num = 5;
function toSeconds(min) {
    if (typeof min === 'number') {
        console.log(min *  60);

    }
    
}
toSeconds(3);


// toInteger

var myStr = "5";
function toInteger(myStr) {
    console.log(parseInt(myStr));
}
toInteger('8');

// nextNumber
var myInt = 0;

function nextNumber (myInt) {
    console.log(myInt + 1);
}
nextNumber(5);


// getFirstElement

function getFirstElement(arr) {
    console.log(arr[0]);
}
getFirstElement([-32, 2, 3, 5]);

// hourToSeconds
function hoursToSeconds(hr) {
    if ((typeof hr) === obj ) {
    for(let i = 0; i < hr.length; i++)
    console.log(+hr[i] * 60 * 60);}
    else {
        console.log(+hr * 60 * 60)
    }
}
// var arr = [1, 2, 3];

hoursToSeconds(arr);


// findPerimeter
function findPerimeter(num1, num2) {
    console.log(num1 * num2);
}
findPerimeter(6,9);

// lessThan100
function lessThan100(num1, num2) {
    if ((num1 + num2) < 100) {
        console.log(true);
    } else {
        console.log(false);
    }
}
lessThan100(93, 45);

// reminder
function remainder(num1, num2) {
    console.log(num1 % num2)
}
remainder(51,10);

// countAnimals
function countAnimalsLegs(tur, horse, pigs) {
    console.log((tur*2) + (horse *4) + (pigs*4))
}
countAnimalsLegs(2,3,5);

// framesPerSecond
function framesPerSecond(num1, num2) {
    console.log(num1*60 * num2);
}
framesPerSecond(10,25);

// divisibleByFive
function divisibleByFive(num) {
    if (num % 5 === 0) {
        console.log(true)
    } else {
        console.log(false)
    }
}
divisibleByFive(5);
divisibleByFive(-55);
divisibleByFive(37);

// isEven
function isEven(num) {
    if((typeof num) === 'string') {
        console.log(-1);
    }
    else if (num % 2 === 0) {
        console.log(true);
    } else {
        console.log(false);
    }
}
isEven(12);
isEven(0);
isEven(11);
isEven('11h');

// areBothOdd
function areBothOdd(num1,num2) {
    if((num1%2 !== 0) && (num2%2 !== 0)) {
        console.log(true);
    } else {
        console.log(false);
    }
}
areBothOdd(1,3);
areBothOdd(1,4);
areBothOdd(2,3);
areBothOdd(0,0);

// getFullName
function getFullName(firstName,lastName) {
    console.log(firstName + " " + lastName);
}
getFullName("GUVI", "GEEK");
getFullName("GUVI",);
getFullName(",", "GEEK");
getFullName('""','""');

// getLengthOfWord

function getLengthOfWord(str) {
    if((typeof str === "number") || (str === undefined)) {
        console.log(-1);
    } else {
        console.log(str.length);
    }

}
getLengthOfWord("GUVI");
getLengthOfWord("");
getLengthOfWord();
getLengthOfWord(9);

// isSameLength
function isSameLength(word1, word2) {
    if(word1.length === word2.length) {
        console.log(true)
    } else {
        console.log(false);
    }
}
isSameLength("GUVI","GEEK");

// getNthElement
function getNthElement(array, n) {
    console.log(array[n]);
}
getNthElement([1, 3, 5], 2);

// getLastElement
function getLastElement(array) {
    console.log(array.pop());
}
getLastElement([1,2,3,4]);
 
// getProperty

var obj = {
    mykey: "value"
};
 
var getProperty = function getProperty(obj, key) {
    console.log(obj[key]);
}
getProperty(obj, 'mykey');
// getProperty(obj, 'dummykey');

// add property

let addProperty = function addProperty(obj, key) {
    obj[key] = 'true'
    console.log(obj[key]);
}

addProperty(obj, 'myname');

// remove property

let removeProperty = function removeProperty(obj, key) {
    delete obj[key];
    console.log(obj);
}

removeProperty(obj, 'myname');

// getPositives

let ar = [-5, 10, -3, 12, -9, 5, 90, 0, 1];

let getPositives = function getPositives(arr) {
    let temp = [];
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] >= 0) {
            temp.push(arr[i]);
        }
    }
    return temp;
}



let ar2 = getPositives(ar);
console.log(ar2);

// powersOfTwo

function powersOfTwo(n){
    let res = 2**n;
    return res;
}

console.log(powersOfTwo(5));

// findMax
function findMax(ar)
{
  let temp = Math.max(...ar);
  return temp;
}
var ar = [-5, 10, -3, 12, -9, 5, 90, 0, 1];
var max = findMax(ar);
console.log("Max: ", max);



// printPrimeNumbers

function printPrimeNumbers(n) {
    let temp = [];
    for (let i = 1; i <= n; i++) {
        if (i % 2 !== 0) {
            temp.push(i);// console.log(i);
        }
    }
    return temp;
}
console.log(printPrimeNumbers(100));

function isPrime(n) {
    if (n % 2 == 0) {
        console.log(false);
    } else {
        console.log(true)
    }
}

isPrime(36);



// reverse a string

var s = reverseString("JavaScript");
console.log(s);
function reverseString(s)
{
    let temp = "";
   for (let i = s.length - 1; i >= 0; i--) {
        temp += s[i];
   }
   return temp;
}

function mergeArrays(arr1, arr2) {
    return [...arr1,...arr2];
}

let arr1 = [1, 2, 3];
let arr2 = [4, 5, 6];

console.log(mergeArrays(arr1, arr2));

console.log(sumCSV('1.5, 2.4, 3.1, 4, 5.5, 6, 7, 8, 9, 10.9'));
function sumCSV(s)
{
  let sum = 0;
  let arr = s.split(",").map(Number);
  for (let i = 0; i < arr.length; i++) {
        sum += i;
  }
  return sum;
}


// Truthy and Falsy values
console.log(`"-0" is a truthy value ? ${-0 ? 'true' : 'false'}.`)
console.log(`"0n" is a truthy value ? ${0n ? 'true' : 'false'}.`)
console.log(`"" is a truthy value ? ${"" ? 'true' : 'false'}.`)
console.log(`'' is a truthy value ? ${'' ? 'true' : 'false'}.`)
console.log(`"null" is a truthy value ? ${null ? 'true' : 'false'}.`)
console.log(`"undefined" is a truthy value ? ${undefined ? 'true' : 'false'}.`)
console.log(`"NaN" is a truthy value ? ${NaN ? 'true' : 'false'}.`)
console.log(`"true" is a truthy value ? ${true ? 'true' : 'false'}.`)
console.log(`"{}" is a truthy value ? ${{} ? 'true' : 'false'}.`)
console.log(`"[]" is a truthy value ? ${[] ? 'true' : 'false'}.`)
console.log(`"42" is a truthy value ? ${42 ? 'true' : 'false'}.`)
console.log(`"0" is a truthy value ? ${0 ? 'true' : 'false'}.`)
console.log(`"false" is a truthy value ? ${false ? 'true' : 'false'}.`)
console.log(`"new Date()" is a truthy value ? ${new Date() ? 'true' : 'false'}.`)
console.log(`"-42" is a truthy value ? ${-42 ? 'true' : 'false'}.`)
console.log(`"12n" is a truthy value ? ${12n ? 'true' : 'false'}.`)
console.log(`"3.14" is a truthy value ? ${3.14 ? 'true' : 'false'}.`)
console.log(`"-3.14" is a truthy value ? ${-3.14 ? 'true' : 'false'}.`)
console.log(`"Infinity" is a truthy value ? ${Infinity ? 'true' : 'false'}.`)
console.log(`""false"" is a truthy value ? ${"false" ? 'true' : 'false'}.`)

/*  // Print odd numbers in array
// ----Anonymous Function---
let numArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];

let oddNum = function (arr) {
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] % 2 != 0 ) {
            console.log(arr[i]);
        }
    }

}

oddNum(numArray);

// ------IIFE-----


(function (arr) {
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] % 2 != 0) {
            console.log(arr[i]);
        }
    }
})();


// ArrowFunction
let oddElem = (arr) => {
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] % 2 !== 0) {
            console.log(arr[i])
        }
    }
} 
// oddElem([1, 2, 3, 4, 5, 6, 7, 8, 9]);

// Convert all the strings to title caps in a string array
let str = ['convert', 'alL', 'the', 'strings', 'TO', 'title', 'caps', 'in', 'a', 'string', 'array']

// anonymous function 

let titleCase = function (str) {
    let temp = [...str]; let res = [];
    for(let i = 0; i < temp.length; i++) {
        // res.push(temp[i].toLowerCase()[0].toUpperCase());
        res.push((temp[i].charAt(0).toUpperCase()).concat(temp[i].slice(1).toLowerCase()))
    }
    return res.join(" ");
}
console.log(titleCase(str));

// iife // This  code is  is not working in node.js but working in browser console.
// let str = ['convert', 'alL', 'the', 'strings', 'TO', 'title', 'caps', 'in', 'a', 'string', 'array'];
// (function (str) {
//     let temp = [...str];
//     let res = [];(
//     for (let i = 0; i < temp.length; i++) {
//         res.push((temp[i].charAt(0).toUpperCase()).concat(temp[i].slice(1).toLowerCase()))
//     }
//     return res.join(" ");
// })(str);
 */
// Sum of all numbers in an array
let array = [ 32, 35, 65, 46, 432, 11, 33, 121, 43, 98, 5555, 11222211, 'we' ];

// anonymous 
let sumArray = function (array) {
    let sum = 0;
    for (let i = 0; i < array.length; i++) {
        sum += array[i];
    }
    return sum;
}
// console.log(sumArray(array));

// arrow function
let sumArr = (array) => {
    let sum = 0;
    for (let i = 0; i < array.length; i++) {
        sum += array[i];
    }
    return sum;
}

// console.log(sumArr(array));

// iife
// (function (array) {
//     let sum = 0;
//     for (let i = 0; i < array.length; i++) {
//         sum += array[i];
//     }
//     console.log(sum);
// })(array);


// Return all the prime numbers in an array

// anonymous
let primeArr = function (array) {
    let prime = [];
    for (let i = 0; i < array.length; i++) {
        if (array[i] <= 2 || array[i] % 2 !== 0)
        prime.push(array[i]);
    }
    return prime;
}
// console.log(primeArr(array));

// arrow function

// let primAr = (array) => {
//     let prime = [];
//     for (let i = 0; i < array.length; i++) {
//         if (array[i] <= 2 || array[i] % 2 !== 0)
//         prime.push(array[i]);
//     }
//     return prime;
// }    

// console.log(primAr(array));

// // iife

// (function (array) {
//     let prime = [];
//     for (let i = 0; i < array.length; i++) {
//         if (array[i] <= 2 || array[i] % 2 !== 0)
//         prime.push(array[i]);
//     }
//     console.log(prime);
// })(array);

// return all polindromes in the array

// anonymous 
let polindromeArray = function (array) {
    let polindArr = [];
    for (let i = 0; i < array.length; i++) {
        let temp = array[i].toString();
        let revTemp = [...temp].reverse().join('') 
        
        if (temp == revTemp) {
            polindArr.push(array[i]); 
        }
    }   
    return polindArr;
}

console.log(polindromeArray(array));
// arrow function 
let polindromeArray1 = (array) => {
    let polindArr = [];
    for (let i = 0; i < array.length; i++) {
        let temp = array[i].toString();
        let revTemp = [...temp].reverse().join('') 
        if (temp == revTemp) {
            polindArr.push(array[i]); 
        }
    }   
    return polindArr;
}

console.log(polindromeArray1(array));

// IIFE function 
(function (array) {
    let polindArr = [];
    for (let i = 0; i < array.length; i++) {
        let temp = array[i].toString();
        let revTemp = [...temp].reverse().join('') 
        if (temp == revTemp) {
            polindArr.push(array[i]); 
        }
    }   
    console.log(polindArr);
})(array);

// median of two sorted arrays of same size
let array1 = [ 2, 4, 5, 9, 8];
let array2 = [ 11, 13, 15, 17, 12, 4];
let array3 = [ 2, 4, 5, 9, 8, 10];
let array4 = [ 2, 11, 13, 15, 17, 18];

// anonymous function
let medianOfTwoSortedArraySameSize = function (arr1, arr2) {
    if (arr1.length === arr2.length) {
   let mergedArr = [...arr1, ...arr2].sort((a,b) => (a,b));
        console.log(`Median of the Two Sorted arrays is ${mergedArr[arr1.length - 1]}.`);
    } else {
        console.log(`Given arrays did not have same length!`)
    }
};

medianOfTwoSortedArraySameSize(array1,array2);
medianOfTwoSortedArraySameSize(array3,array4);

// Arrow function
let medianOfTwoSortedArraySameSize1 = (arr1, arr2) => {
    if (arr1.length === arr2.length) {
   let mergedArr = [...arr1, ...arr2].sort((a,b) => (a,b));
        console.log(`Median of the Two Sorted arrays is ${mergedArr[arr1.length - 1]}.`);
    } else {
        console.log(`Given arrays did not have same length!`)
    }
};

medianOfTwoSortedArraySameSize1(array1,array2);
medianOfTwoSortedArraySameSize1(array3,array4);


// IIFE
(function(arr1, arr2) {
    if (arr1.length === arr2.length) {
   let mergedArr = [...arr1, ...arr2].sort((a,b) => (a,b));
        console.log(`Median of the Two Sorted arrays is ${mergedArr[arr1.length - 1]}.`);
    } else {
        console.log(`Given arrays did not have same length!`)
    }
})(array1,array2);


// Remove duplicates from an array

let array5 = [ 1, 2, 3, 4, 3, 5, 5, 6, 8, 9];

// anonymous function
let removeDuplicates = function (arr) {
    let result = [];
        
    for (let i = 0; i < arr.length; i++) {
        if (result.indexOf(arr[i]) === -1) {
                result.push(arr[i])
        }
    }
    
    console.log(result);
}
removeDuplicates(array5);

// arrow function
let removeDuplicates1 = (arr) => {
    let result = [];
        
    for (let i = 0; i < arr.length; i++) {
        if (result.indexOf(arr[i]) === -1) {
            result.push(arr[i])
        }
    }
    
    console.log(result);
}
removeDuplicates1(array5);

// IIFE
((arr) => {
    let result = [];
        
    for (let i = 0; i < arr.length; i++) {
        if (result.indexOf(arr[i]) === -1) {
            result.push(arr[i])
        }
    }
    
    console.log(result);
})(array5);

// Rotate an array by k times 
let array6 = [1, 2, 3, 4, 5, 6, 7]; 
let k = 3;


// Anonymous function
let rotateArrayKtimes = function (arr, k) {
    let result = [];
    
    for ( let i = k-1; i < arr.length; i++) {
        result.push(arr[i]);
    }
    for( let j = 0; j < k-1; j++) {
        result.push(arr[j]);
    }
    console.log(result);
}
rotateArrayKtimes(array6, 3);

// Arrow function
let rotateArrayKtimes1 = (arr, k) => {
    let result = [];
    
    for ( let i = k-1; i < arr.length; i++) {
        result.push(arr[i]);
    }
    for( let j = 0; j < k-1; j++) {
        result.push(arr[j]);
    }
    console.log(result);
}
rotateArrayKtimes1(array6, 4);

// IIFE
((arr, k) => {
    let result = [];
    
    for ( let i = k-1; i < arr.length; i++) {
        result.push(arr[i]);
    }
    for( let j = 0; j < k-1; j++) {
        result.push(arr[j]);
    }
    console.log(result);
})(array6,3)
